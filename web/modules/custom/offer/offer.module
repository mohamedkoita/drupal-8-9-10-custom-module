<?php

use Drupal\Core\Render\Element;
use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function offer_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $forms = ['offer_step_1_form', 'offer_step_2_form', 'offer_step_3_form', 'offer_edit_form'];
  if (in_array($form_id, $forms)) {
    // Prevent revision log box access
    $form['revision_log']['#access'] = FALSE;
  }
}

/**
 * Provides a theme definition for custom content entity offer
 * {@inheritdoc}
 */
function offer_theme($existing, $type, $theme, $path) {
  return [
    'offer' => [
      'render element' => 'elements',
    ],
    'offer__full' => [
      'base hook' => 'offer',
    ],
    'offer__teaser' => [
      'base hook' => 'offer'
    ],
  ];
}

/**
 * Prepares variables for templates.
 * implements hook_preprocess_HOOK()
 */
function template_preprocess_offer(array &$variables)
{
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }

  $offer = $variables['elements']['#offer'];
  // The full offer object
  $variables['offer'] = $offer;

}

/**
 * Adds template possibility for view modes
 * Implements hook_provider_theme_suggestions_hook_alter
 */
function offer_theme_suggestions_offer_alter( array &$suggestions, array $vars, $hook ) {
  if ( $offer = $vars['elements']['#offer'] ) {
    if (isset($vars['elements']['#view_mode'])) {
      $suggestions[] = 'offer__' . $vars['elements']['#view_mode'];
    }
  }
}

/**
 * Implements hook_views_pre_render().
 */
function offer_views_pre_render(ViewExecutable $view) {
  if (isset($view) && ($view->storage->id() == 'offer_overview')) {
    $view->element['#attached']['library'][] = 'offer/offer_overview_page';
  }

  /**
  * Implements hook_page_attachments()
  */
  function offer_page_attachments(array &$attachments) {
    $attachments['#attached']['library'][] = 'offer/platform';
    dump('OKKKKKKKKKK');
  }

  /**
  * Add a "offer-detail-page" class to main content of offer detail view with imolementing preprocess_html hook
  */
  // function offer_preprocess_html(&$variables) {
  //   //On regarde si la route courante contient offer
  //   $offer = \Drupal::routeMatch()->getParameter('offer');
  //   //Alors on récupère la page et on y ajoute la classe offer-detail-page
  //   if ($offer) {
  //     $variables['attributes']['class'][] = 'offer-detail-page';
  //   }
  // }

  /**
  * Add a "offer-detail-page" class to the body on a offer detail page
  */
  //Ici il y a un problème que je n'ai pas encore réussi à adresser. Ce hook ne passe que sur toutes les pages sauf celle où il devrait
  //De plus il ne passe qu'au premier chargement après avoir vidé les caches. Il faut que je creuse pour mieux comprendre ce qui se passe.
  function offer_preprocess_html(&$variables) {
    $offer = \Drupal::routeMatch()->getParameters('offer');
    if($offer) {
      $variables['attributes']['class'][] = 'offer-detail-page';
    }
    // dump($offer);
    // \Drupal::messenger()->addMessage(t('Invalid professional record'), 'error');
  }

}
